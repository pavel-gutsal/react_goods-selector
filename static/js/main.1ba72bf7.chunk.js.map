{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","word","clearHandler","setState","selectHandler","el","removeHandler","filter","element","this","className","length","join","type","onClick","goods","map","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"6NAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCFWA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,CAAC,QAFX,EAKEC,aAAe,WACb,EAAKC,SAAS,CAAEF,KAAM,MAN1B,EASEG,cAAgB,SAACC,GACf,EAAKF,UAAS,SAAAH,GAAK,MACjB,CAAEC,KAAK,GAAD,mBAAMD,EAAMC,MAAZ,CAAkBI,SAX9B,EAeEC,cAAgB,SAACD,GACf,EAAKF,UAAS,SAAAH,GAAK,MACjB,CAAEC,KAAK,YAAKD,EAAMC,KAAKM,QAAO,SAAAC,GAAO,OAAIA,IAAYH,WAjB3D,4CAqBE,WAAU,IAAD,OACCJ,EAASQ,KAAKT,MAAdC,KAER,OACE,uBAAMS,UAAU,oBAAhB,UACE,wBAAQA,UAAU,cAAlB,SACIT,EAAKU,OAAS,EACd,qCACE,oBAAID,UAAU,aAAd,mBACMT,EAAKW,KAAK,MADhB,kBAGA,wBACEC,KAAK,SACLH,UAAU,yBACVI,QAASL,KAAKP,aAHhB,sBASF,oBAAIQ,UAAU,aAAd,iCAKJ,oBAAIA,UAAU,UAAd,SAEIK,EAAMC,KAAI,SAAAX,GACR,OACE,qBACEK,UAAS,eAAUT,EAAKgB,SAASZ,IAAO,gBAD1C,UAIGA,EACEJ,EAAKgB,SAASZ,GAYb,wBACEQ,KAAK,SACLH,UAAU,0BACVI,QAAS,WACP,EAAKR,cAAcD,IAJvB,oBAVA,wBACEQ,KAAK,SACLH,UAAU,0BACVI,QAAS,WACP,EAAKV,cAAcC,IAJvB,sBALCA,eApDvB,GAAyBa,aCLzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1ba72bf7.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import { Component } from 'react';\nimport './App.scss';\nimport goods from './goods';\n\ntype State = {\n  word:string[];\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    word: ['Jam'],\n  };\n\n  clearHandler = () => {\n    this.setState({ word: [] });\n  };\n\n  selectHandler = (el: string) => {\n    this.setState(state => (\n      { word: [...state.word, el] }\n    ));\n  };\n\n  removeHandler = (el: string) => {\n    this.setState(state => (\n      { word: [...state.word.filter(element => element !== el)] }\n    ));\n  };\n\n  render() {\n    const { word } = this.state;\n\n    return (\n      <main className=\"App App__position\">\n        <header className=\"App__header\">\n          { word.length > 0 ? (\n            <>\n              <h1 className=\"App__title\">\n                {`${word.join(', ')} is selected`}\n              </h1>\n              <button\n                type=\"button\"\n                className=\"App__clear App__button\"\n                onClick={this.clearHandler}\n              >\n                Clear\n              </button>\n            </>\n          ) : (\n            <h1 className=\"App__title\">\n              No goods selected\n            </h1>\n          )}\n        </header>\n        <ul className=\"App__ul\">\n          {\n            goods.map(el => {\n              return (\n                <li\n                  className={`Good ${word.includes(el) && 'Good--active'}`}\n                  key={el}\n                >\n                  {el}\n                  { !word.includes(el)\n                    ? (\n                      <button\n                        type=\"button\"\n                        className=\"App__select App__button\"\n                        onClick={() => {\n                          this.selectHandler(el);\n                        }}\n                      >\n                        Select\n                      </button>\n                    ) : (\n                      <button\n                        type=\"button\"\n                        className=\"App__remove App__button\"\n                        onClick={() => {\n                          this.removeHandler(el);\n                        }}\n                      >\n                        Remove\n                      </button>\n                    )}\n                </li>\n              );\n            })\n          }\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}